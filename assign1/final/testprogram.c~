/*
 * Cmput379 - Assignment 1
 * Maxime Convert
 * Student ID: 1297078
 */

#include <setjmp.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "memchunk.h"

static int v = 1;
static int w;

int main(int argc, char **argv)
{

	int x = 3;
	int size, chunk_count, i, y;
	int *z;

	struct memchunk chunk_list[100];
	
	z = malloc(10);

	size = 100;

	chunk_count = get_mem_layout(chunk_list, size);


	printf("#------------------------------------#\n");

	for (i=0; i<chunk_count; i++)
	{
		printf("start: %p, ", chunk_list[i].start);
		printf("length: %lu, ", chunk_list[i].length);
		printf("RW: %d\n", chunk_list[i].RW);	
	}
	printf("#------------------------------------#\n");	
	printf("The total number of chunks is: %d\n\n", chunk_count);
	

	printf("Static global (initialized): &v = %p\n", &v);
	printf("Static global (non-initialized): &w = %p\n", &w);
	printf("Local (initialized): &x = %p\n", &x);
	printf("Local (non-initialized): &y = %p\n", &y);
	printf("Local (memory allocated): &z = %p\n", z);
	printf("Malloc address: %p\n", &malloc);
	printf("Main function address: %p\n", &main);
	return 0;
}
